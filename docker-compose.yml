version: '3.8'

services:
  # RPi5 dla rzeczywistego sprzętu RPi3
  rpi:
    build: ./rpi-emulator
    container_name: c20-rpi
    privileged: true
    volumes:
      - ./shared:/shared
      - /dev:/dev
    networks:
      - c20-network
    environment:
      - MQTT_BROKER=mqtt
      - SYSTEM_MODE=C20
      - HARDWARE_MODE=true
    depends_on:
      - mqtt
    profiles:
      - hardware

  # RPi5 emulator dla PC z emulowanymi portami
  rpi3pc:
    build: ./rpi-emulator
    container_name: c20-rpi3pc
    ports:
      - "${RPI_API_PORT}:4000"  # API port
    volumes:
      - ./shared:/shared
      - i2c-bus:/dev/i2c
    networks:
      - c20-network
    privileged: true
    environment:
      - MQTT_BROKER=mqtt
      - SYSTEM_MODE=C20
      - GPIO_MOCK=true
      - I2C_MOCK=true
      - EMULATION_MODE=true
    depends_on:
      - mqtt

  # QEMU-based Raspberry PI OS Virtualization
  rpi-qemu:
    build:
      context: ./rpi-emulator
      dockerfile: Dockerfile.qemu
    container_name: c20-rpi-qemu
    ports:
      - "${QEMU_SSH_PORT}:2222"   # SSH to RPi OS
      - "${QEMU_VNC_PORT}:5901"   # VNC display
      - "${QEMU_API_PORT}:4000"   # API bridge
      - "${QEMU_WEB_PORT}:8080"   # Management interface
    volumes:
      - ./rpi3iso:/rpi/images
      - ./shared:/rpi/shared
    networks:
      - c20-network
    privileged: true
    environment:
      - QEMU_CPU=cortex-a72
      - QEMU_MACHINE=raspi3b
      - QEMU_MEMORY=1G
    depends_on:
      - mqtt

  # LCD Display (7.9" HDMI)
  lcd-display:
    build: ./lcd-display
    container_name: c20-lcd
    ports:
      - "${LCD_DISPLAY_PORT}:80"
    networks:
      - c20-network
    environment:
      - WS_URL=ws://${WS_HOST}:${MQTT_WEBSOCKET_PORT}
    depends_on:
      - rpi3pc

  # HUI Keyboard Panel
  hui-keyboard:
    build: ./hui-keyboard
    container_name: c20-keyboard
    ports:
      - "${HUI_KEYBOARD_PORT}:80"
    networks:
      - c20-network
    environment:
      - RPI_HOST=rpi3pc
      - I2C_ADDRESS=0x20
    depends_on:
      - rpi3pc

  # Symulacja czujników ciśnienia
  pressure-sensors:
    build: ./pressure-sensors
    container_name: c20-sensors
    volumes:
      - i2c-bus:/dev/i2c
    networks:
      - c20-network
    environment:
      - I2C_BUS=1
      - SENSOR_LP_ADDR=0x48
      - SENSOR_MP_ADDR=0x49
      - SENSOR_HP_ADDR=0x4A

  # PCB OUT 12 - Sterownik zaworów
  valve-controller:
    build: ./valve-controller
    container_name: c20-valves
    volumes:
      - i2c-bus:/dev/i2c
    networks:
      - c20-network
    environment:
      - I2C_ADDRESS=0x21
      - NUM_OUTPUTS=12

  # MQTT Broker
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: c20-mqtt
    ports:
      - "${MQTT_PORT}:1883"
      - "${MQTT_WEBSOCKET_PORT}:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
    networks:
      - c20-network

  # Frontend na porcie 8088
  frontend:
    build: ./frontend
    container_name: c20-frontend
    ports:
      - "${FRONTEND_PORT}:80"
    networks:
      - c20-network
    environment:
      - API_URL=http://${API_HOST}:${RPI_API_PORT}
      - LCD_DISPLAY_PORT=${LCD_DISPLAY_PORT}
      - HUI_KEYBOARD_PORT=${HUI_KEYBOARD_PORT}
      - MODBUS_VISUALIZER_PORT=${MODBUS_VISUALIZER_PORT}
    depends_on:
      - rpi3pc


  # Symulator Modbus RTU IO 8CH
  modbus-io-8ch:
    build: ./modbus-io-8ch
    container_name: c20-modbus-io
    ports:
      - "${MODBUS_IO_TCP_PORT}:5020"  # TCP bridge dla Modbus RTU
      - "${MODBUS_IO_API_PORT}:8083"  # Web API (external:internal)
    volumes:
      - modbus-rtu:/dev/modbus
    networks:
      - c20-network
    environment:
      - DEVICE_ADDRESS=1
      - BAUDRATE=9600
      - WEB_PORT=8085

  # Wizualizacja Modbus
  modbus-visualizer:
    build: ./modbus-visualizer
    container_name: c20-modbus-viz
    ports:
      - "${MODBUS_VISUALIZER_PORT}:80"
    networks:
      - c20-network
    environment:
      - MODBUS_API=http://${API_HOST}:${MODBUS_IO_API_PORT}
    depends_on:
      - modbus-io-8ch

  # HMI Hardware Services
  
  # HMI Virtual Touchpad
  hmi-pad:
    build: ./hmi-pad
    container_name: c20-hmi-pad
    ports:
      - "${HMI_PAD_PORT}:80"
    networks:
      - c20-network
    environment:
      - MQTT_BROKER=mqtt
      - MQTT_PORT=1883
      - RPI_TARGET=rpi3pc
    depends_on:
      - mqtt
      - rpi3pc

  # HMI Virtual Keyboard
  hmi-keyboard:
    build: ./hmi-keyboard
    container_name: c20-hmi-keyboard
    ports:
      - "${HMI_KEYBOARD_PORT}:80"
    networks:
      - c20-network
    environment:
      - MQTT_BROKER=mqtt
      - MQTT_PORT=1883
      - RPI_TARGET=rpi3pc
    depends_on:
      - mqtt
      - rpi3pc

  # HMI Virtual Monitor (HDMI)
  hmi-monitor:
    build: ./hmi-monitor
    container_name: c20-hmi-monitor
    ports:
      - "${HMI_MONITOR_PORT}:80"
      - "${HMI_MONITOR_WS_PORT}:5558"  # WebSocket control
      - "${HMI_MONITOR_VNC_PORT}:5559" # VNC stream
    networks:
      - c20-network
    environment:
      - MQTT_BROKER=mqtt
      - MQTT_PORT=1883
      - VNC_HOST=${API_HOST}
      - VNC_PORT=${RPI_VNC_PORT}
      - RPI_TARGET=rpi3pc
    depends_on:
      - mqtt
      - rpi3pc
    volumes:
      - ./hmi-monitor/captures:/app/captures
      - ./hmi-monitor/stream:/app/stream

  # HMI Virtual Numpad
  hmi-numpad:
    build: ./hmi-numpad
    container_name: c20-hmi-numpad
    ports:
      - "${HMI_NUMPAD_PORT}:80"
      - "${HMI_NUMPAD_WS_PORT}:5560"  # WebSocket control
    networks:
      - c20-network
    environment:
      - MQTT_BROKER=mqtt
      - MQTT_PORT=1883
      - RPI_TARGET=rpi3pc
    depends_on:
      - mqtt
      - rpi3pc


networks:
  c20-network:
    driver: bridge

volumes:
  modbus-rtu:
  i2c-bus: